<?php

/**
 * StaticPage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    grainedevie
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
class StaticPage extends BaseStaticPage {

    public function getUrl() {
        return url_for('page', $this);
    }

    public function getTitleSlug() {
        $text = preg_replace('#[^\\pL\d]+#u', '-', $this->getTitle());
        // trim
        $text = trim($text, '-');
        // transliterate
        if (function_exists('iconv'))
            $text = iconv('utf-8', 'us-ascii//TRANSLIT', $text);
        // lowercase
        $text = strtolower($text);
        // remove unwanted characters
        $text = preg_replace('#[^-\w]+#', '', $text);
 
        if (empty($text))
            return 'n-a';
        return $text;
    }

    public static function monter($sp) {
        $currentPosition = $sp->getPosition();
        if ($currentPosition <= 1) {
            return false;
        } else {
            $upSp = Doctrine_Query::create()->from('StaticPage sp')->whereIn('sp.position', $currentPosition - 1)->andWhereIn('sp.category_id', $sp->getCategoryId())->fetchOne();
            if ($upSp != false) {
                $upSp->setPosition($currentPosition);
                $upSp->save();

                $sp->setPosition($currentPosition - 1);
                $sp->save();

                return true;
            } else {
                return false;
            }
        }
    }

    public static function descendre($sp) {
        $currentPosition = $sp->getPosition();
        $lowSp = Doctrine_Query::create()->from('StaticPage sp')->whereIn('sp.position', $currentPosition + 1)->andWhereIn('sp.category_id', $sp->getCategoryId())->fetchOne();
        if ($lowSp == false) {
            return false;
        } else {
            $lowSp->setPosition($currentPosition);
            $lowSp->save();

            $sp->setPosition($currentPosition + 1);
            $sp->save();

            return true;
        }
    }

    public static function getLastPositionOfMyCategory($sp) {
        $categoryId = $sp->getCategoryId();
        $position = Doctrine_Query::create()->from('StaticPage sp')->where('sp.category_id = ?', $categoryId)->count();
        return $position;
    }

    public static function addAtTheEnd($sp) {
        $position = StaticPage::getLastPositionOfMyCategory($sp);
        $sp->setPosition($position + 1);
    }

    public static function cleanCategory($category_id) {
        $pages = Doctrine_Query::create()->from('StaticPage sp')->where('sp.category_id = ?', $category_id)->orderBy('position ASC')->execute();

        foreach ($pages as $compteur => $page) {
            $page->setPosition($compteur + 1);
            $page->save();
        }
    }

    public function save(Doctrine_Connection $conn = null) {
        if ($this->isNew() && $this->getPosition() == null) {
            StaticPage::AddAtTheEnd($this);
        }
        return parent::save($conn);
    }

    public function setCategoryId($categoryId = null) {
        if (!$this->isNew() && isset($categoryId) && $categoryId != $this->getCategoryId()) {

            $exCategory = $this->getCategoryId();
            $retour = $this->_set('category_id', $categoryId);
            StaticPage::addAtTheEnd($this);
            $this->save();
            $this->cleanCategory($exCategory);

            return $retour;
        }
    }

    public function couldBeEcho() {
        if ($this->getIsActivated() && $this->getPublicationDate() <= date('Y-m-d H:i:s')) {
            return true;
        } else {
            return false;
        }
    }

}