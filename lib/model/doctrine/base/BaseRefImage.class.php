<?php

/**
 * BaseRefImage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $url
 * @property clob $code
 * @property integer $payment_id
 * @property integer $lang_id
 * @property integer $param_id
 * @property payment $payment
 * @property Language $Language
 * @property RefImageParam $RefImageParam
 * 
 * @method string        getUrl()           Returns the current record's "url" value
 * @method clob          getCode()          Returns the current record's "code" value
 * @method integer       getPaymentId()     Returns the current record's "payment_id" value
 * @method integer       getLangId()        Returns the current record's "lang_id" value
 * @method integer       getParamId()       Returns the current record's "param_id" value
 * @method payment       getPayment()       Returns the current record's "payment" value
 * @method Language      getLanguage()      Returns the current record's "Language" value
 * @method RefImageParam getRefImageParam() Returns the current record's "RefImageParam" value
 * @method RefImage      setUrl()           Sets the current record's "url" value
 * @method RefImage      setCode()          Sets the current record's "code" value
 * @method RefImage      setPaymentId()     Sets the current record's "payment_id" value
 * @method RefImage      setLangId()        Sets the current record's "lang_id" value
 * @method RefImage      setParamId()       Sets the current record's "param_id" value
 * @method RefImage      setPayment()       Sets the current record's "payment" value
 * @method RefImage      setLanguage()      Sets the current record's "Language" value
 * @method RefImage      setRefImageParam() Sets the current record's "RefImageParam" value
 * 
 * @package    grainedevie
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseRefImage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ref_image');
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('code', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('payment_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('lang_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('param_id', 'integer', null, array(
             'type' => 'integer',
             'default' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('payment', array(
             'local' => 'payment_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('Language', array(
             'local' => 'lang_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('RefImageParam', array(
             'local' => 'param_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL',
             'onUpdate' => 'CASCADE'));
    }
}